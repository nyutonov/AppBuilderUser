package uz.gita.appbuilderuser.presenter.componentsimport android.util.Logimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.text.KeyboardOptionsimport androidx.compose.material3.ExperimentalMaterial3Apiimport androidx.compose.material3.Textimport androidx.compose.material3.TextFieldimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.runtime.mutableStateOfimport androidx.compose.runtime.rememberimport androidx.compose.runtime.setValueimport androidx.compose.ui.Modifierimport androidx.compose.ui.text.TextStyleimport androidx.compose.ui.text.input.KeyboardTypeimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport uz.gita.appbuilderuser.data.model.ComponentsModelimport uz.gita.appbuilderuser.data.model.InputModelimport uz.gita.appbuilderuser.data.room.entity.ComponentEntity@OptIn(ExperimentalMaterial3Api::class)@Composablefun InputComponent(    data: ComponentsModel,    list : List<ComponentEntity> ,    listener: (String , String) -> Unit) {    var value by remember {        mutableStateOf("")    }    TextField(        value = value,        onValueChange = {            value = it            listener.invoke(data.id , value)            if (data.isEnableMaxLength) {                value = if (it.length > data.maxLength) it.substring(0, data.maxLength) else it            } else {                value = it            }        },        modifier = Modifier            .fillMaxWidth()            .padding(16.dp),        placeholder = { Text(text = data.placeHolder) },        singleLine = true,        textStyle = TextStyle(fontSize = 18.sp),        keyboardOptions = KeyboardOptions(            keyboardType = when (data.type) {                "Email" -> KeyboardType.Email                "Number" -> KeyboardType.Number                else -> KeyboardType.Text            }        )    )}